name: 🔐 Secrets Detection & Advanced Security

on:
  workflow_call:

jobs:
    secrets-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
      security-events: write
    needs: static-analysis
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Execute GitLeaks Secrets Analysis
        run: |
          mkdir -p .osdo/results
          docker run --rm \
            -v $(pwd):/workspace \
            -v $(pwd)/.osdo/results:/results \
            zricethezav/gitleaks:latest \
            detect \
            --source="/workspace" \
            --report-format=json \
            --report-path="/results/gitleaks-secrets.json" \
            --verbose || true
        continue-on-error: true

      - name: Evaluate Secrets Analysis Results
        run: |
          mkdir -p .osdo/results
          
          # Contar detecciones de GitLeaks
          gitleaks_count=$(cat .osdo/results/gitleaks-secrets.json 2>/dev/null | jq 'length' 2>/dev/null || echo "0")
          
          # Contar detecciones de Semgrep (solo secretos)
          semgrep_count=$(cat .osdo/results/semgrep-secrets.json 2>/dev/null | jq '[.results[] | select(.extra.metadata.category == "security" and (.extra.metadata.subcategory // "" | contains("secret")))] | length' 2>/dev/null || echo "0")
          
          # Crear reporte de secretos
          cat > .osdo/results/secrets-analysis-summary.json << EOF
          {
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "gitleaks_detections": $gitleaks_count,
            "semgrep_detections": $semgrep_count,
            "total_secrets_found": $((gitleaks_count + semgrep_count)),
            "analysis_files": [
              "gitleaks-secrets.json",
              "semgrep-secrets.json"
            ]
          }
          EOF
          
          echo "Secrets Analysis Summary:"
          echo "GitLeaks detections: $gitleaks_count"
          echo "Semgrep detections: $semgrep_count"
          echo "Total secrets found: $((gitleaks_count + semgrep_count))"
          
          # Advertir si se encuentran secretos
          if [ $((gitleaks_count + semgrep_count)) -gt 0 ]; then
            echo "::warning::Secrets detected in codebase. Review .osdo/results/secrets-analysis-summary.json"
          fi
        continue-on-error: true

      - name: Run TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --results=verified,unknown --json
        continue-on-error: true

      - name: Upload secrets analysis results
        uses: actions/upload-artifact@v4
        with:
          name: secrets-analysis-results
          path: |
            .osdo/results/gitleaks-secrets.json
            .osdo/results/semgrep-secrets.json
            .osdo/results/secrets-analysis-summary.json